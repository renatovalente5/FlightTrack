{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\FlightTrack\\\\src\\\\main\\\\frontend\\\\src\\\\components\\\\DataPlaneComponente.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\"; //import {Button} from 'react-bootstrap';\n//import ButtonToolbar from 'react-bootstrap/Button';\n\nimport { ButtonToolbar } from 'react-bootstrap';\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Switch, Route, Link, useRouteMatch } from \"react-router-dom\";\nimport styled from 'styled-components';\nimport Alert from 'react-bootstrap/Alert';\nimport ReactMapGL, { Marker } from 'react-map-gl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst H0 = styled.h1({\n  fontSize: 25,\n  paddingBottom: 30,\n  paddingTop: 20,\n  color: 'black',\n  textAlign: \"center\"\n});\n_c = H0;\nconst H1 = styled.h1({\n  paddingBottom: 30,\n  fontSize: 12,\n  paddingTop: 0,\n  textAlign: \"center\"\n});\n\nclass DataPlaneComponente extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      planes: []\n    };\n    this.loadData = this.loadData.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadData();\n    setInterval(this.loadData, 10000);\n  }\n\n  async loadData() {\n    try {\n      var url = \"http://localhost:8081/\" + this.props.match.params.id;\n      axios.get(url).then(response => {\n        this.setState({\n          planes: response.data\n        });\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(H0, {\n        className: \"text-center\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: this.props.match.params.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 47\n        }, this), \" plane \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactMapGL, {\n        latitude: 39.983011,\n        longitude: -4.087557,\n        width: \"72.3vw\",\n        height: \"67vh\",\n        zoom: 5,\n        mapboxApiAccessToken: \"pk.eyJ1Ijoicml0YS1hbWFudGU5OTU1IiwiYSI6ImNrbmEyZGpzYzBqcjcybm55Z2NyOTVkazMifQ.oRw17OIsKSA0CeIUG2UC1Q\",\n        children: this.state.planes.map(plane => /*#__PURE__*/_jsxDEV(Marker, {\n          latitude: plane.latitude,\n          longitude: plane.longitude,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"point.png\",\n            width: \"10\",\n            height: \"10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this)\n        }, plane.icao, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Icao24\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Callsign\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Origin Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Time position\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Longitude\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Latitude\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Altitude\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Velocity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [\" \", this.state.planes.map(plane => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: plane.icao\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: plane.callsign\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: plane.origin_country\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: plane.time_position\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: plane.longitude\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: plane.latitude\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: plane.baro_altitude\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: plane.velocity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)]\n          }, plane.icao, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default DataPlaneComponente;\n\nvar _c;\n\n$RefreshReg$(_c, \"H0\");","map":{"version":3,"sources":["C:/Users/User/Desktop/FlightTrack/src/main/frontend/src/components/DataPlaneComponente.js"],"names":["React","ReactDOM","ButtonToolbar","axios","BrowserRouter","Router","Switch","Route","Link","useRouteMatch","styled","Alert","ReactMapGL","Marker","H0","h1","fontSize","paddingBottom","paddingTop","color","textAlign","H1","DataPlaneComponente","Component","constructor","props","state","planes","loadData","bind","componentDidMount","setInterval","url","match","params","id","get","then","response","setState","data","e","console","log","render","map","plane","latitude","longitude","icao","callsign","origin_country","time_position","baro_altitude","velocity"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n//import {Button} from 'react-bootstrap';\r\n//import ButtonToolbar from 'react-bootstrap/Button';\r\nimport {ButtonToolbar} from 'react-bootstrap';\r\nimport axios from \"axios\";\r\nimport { BrowserRouter as Router, Switch, Route, Link, useRouteMatch } from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport ReactMapGL, {Marker} from 'react-map-gl';\r\n\r\nconst H0 = styled.h1({\r\n    fontSize: 25,\r\n    paddingBottom: 30,\r\n    paddingTop: 20,\r\n    color: 'black',\r\n    textAlign: \"center\"\r\n});\r\n\r\nconst H1 = styled.h1({\r\n    paddingBottom: 30,\r\n    fontSize: 12,\r\n    paddingTop: 0,\r\n    textAlign: \"center\"\r\n});\r\n\r\nclass DataPlaneComponente extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n            this.state = {\r\n                planes:[]\r\n            }\r\n        this.loadData = this.loadData.bind(this);\r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.loadData();\r\n        setInterval(this.loadData, 10000);\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            var url = \"http://localhost:8081/\" + this.props.match.params.id;\r\n            axios.get(url).then(response => {\r\n                this.setState({ planes: response.data })\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }     \r\n            \r\n    render(){       \r\n        return(\r\n            <div>\r\n                <H0 className=\"text-center\" > <b>{this.props.match.params.id}</b> plane </H0>\r\n                \r\n                <ReactMapGL latitude={39.983011} longitude={-4.087557} width=\"72.3vw\" height=\"67vh\" zoom={5} mapboxApiAccessToken=\"pk.eyJ1Ijoicml0YS1hbWFudGU5OTU1IiwiYSI6ImNrbmEyZGpzYzBqcjcybm55Z2NyOTVkazMifQ.oRw17OIsKSA0CeIUG2UC1Q\">\r\n                    {this.state.planes.map( plane => (\r\n                        <Marker key={plane.icao} latitude={plane.latitude} longitude={plane.longitude}>\r\n                            <img src=\"point.png\" width=\"10\" height=\"10\"/>\r\n                        </Marker>\r\n                        )\r\n                    )}\r\n                </ReactMapGL>\r\n                \r\n                <table className = \"table table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <td>Icao24</td>\r\n                            <td>Callsign</td>\r\n                            <td>Origin Country</td>\r\n                            <td>Time position</td>\r\n                            <td>Longitude</td>\r\n                            <td>Latitude</td>\r\n                            <td>Altitude</td>\r\n                            <td>Velocity</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody> {this.state.planes.map( plane =>\r\n                        <tr key = {plane.icao}>\r\n                            <td>{plane.icao}</td>\r\n                            <td>{plane.callsign}</td>\r\n                            <td>{plane.origin_country}</td>\r\n                            <td>{plane.time_position}</td>\r\n                            <td>{plane.longitude}</td>\r\n                            <td>{plane.latitude}</td>\r\n                            <td>{plane.baro_altitude}</td>\r\n                            <td>{plane.velocity}</td>\r\n                        </tr>\r\n                    )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DataPlaneComponente\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}