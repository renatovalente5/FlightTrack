{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\FlightTrack\\\\src\\\\main\\\\frontend\\\\src\\\\components\\\\Test.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport { GoogleMap, withScriptjs, withGoogleMap, Marker } from 'react-google-maps';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Test extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      planes: []\n    };\n    this.loadData = this.loadData.bind(this);\n  }\n\n  async loadData() {\n    try {\n      axios.get(\"http://localhost:8081/over\").then(response => {\n        this.setState({\n          planes: response.data\n        });\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    const WrappeMap = withScriptjs(withGoogleMap(props => /*#__PURE__*/_jsxDEV(GoogleMap, {\n      defaultZoom: 5,\n      defaultCenter: {\n        lat: 40.483011,\n        lng: -4.087557\n      },\n      children: this.state.planes.map(plane => /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: plane.latitude,\n          lng: plane.longitude\n        }\n      }, plane.icao, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(WrappeMap, {\n        googleMapURL: `https://maps.googleapis.com/maps/api/js?key=AIzaSyCYtWGt6BW7bHK-u7emPPVsYWsoMUKODHI&v=3.exp&libraries=geometry,drawing,places`,\n        loadingElement: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: `100%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 33\n        }, this),\n        containerElement: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: `400px`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 35\n        }, this),\n        mapElement: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: `100%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Test;","map":{"version":3,"sources":["C:/Users/User/Desktop/FlightTrack/src/main/frontend/src/components/Test.js"],"names":["React","Component","axios","GoogleMap","withScriptjs","withGoogleMap","Marker","Test","constructor","props","state","planes","loadData","bind","get","then","response","setState","data","e","console","log","render","WrappeMap","lat","lng","map","plane","latitude","longitude","icao","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,YAApB,EAAkCC,aAAlC,EAAiDC,MAAjD,QAA8D,mBAA9D;;;AAGA,MAAMC,IAAN,SAAmBN,SAAnB,CAA6B;AAEzBO,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAC;AADE,KAAb;AAGA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACH;;AAEa,QAARD,QAAQ,GAAG;AACb,QAAI;AACAV,MAAAA,KAAK,CAACY,GAAN,CAAU,4BAAV,EAAwCC,IAAxC,CAA6CC,QAAQ,IAAI;AACrD,aAAKC,QAAL,CAAc;AAAEN,UAAAA,MAAM,EAAEK,QAAQ,CAACE;AAAnB,SAAd;AACH,OAFD;AAGH,KAJD,CAIE,OAAOC,CAAP,EAAU;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ;;AAEDG,EAAAA,MAAM,GAAG;AAEL,UAAMC,SAAS,GAAGnB,YAAY,CAACC,aAAa,CAAEI,KAAD,iBACzC,QAAC,SAAD;AAAW,MAAA,WAAW,EAAE,CAAxB;AAA2B,MAAA,aAAa,EAAE;AAAEe,QAAAA,GAAG,EAAE,SAAP;AAAkBC,QAAAA,GAAG,EAAE,CAAC;AAAxB,OAA1C;AAAA,gBACK,KAAKf,KAAL,CAAWC,MAAX,CAAkBe,GAAlB,CAAuBC,KAAD,iBACnB,QAAC,MAAD;AAAyB,QAAA,QAAQ,EAAE;AAAEH,UAAAA,GAAG,EAAEG,KAAK,CAACC,QAAb;AAAuBH,UAAAA,GAAG,EAAEE,KAAK,CAACE;AAAlC;AAAnC,SAAaF,KAAK,CAACG,IAAnB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADwC,CAAd,CAA9B;AASA,wBACI;AAAA,6BACI,QAAC,SAAD;AAAW,QAAA,YAAY,EAAG,+HAA1B;AACA,QAAA,cAAc,eAAE;AAAK,UAAA,KAAK,EAAE;AAAEC,YAAAA,MAAM,EAAG;AAAX;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADhB;AAEA,QAAA,gBAAgB,eAAE;AAAK,UAAA,KAAK,EAAE;AAAEA,YAAAA,MAAM,EAAG;AAAX;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAFlB;AAGA,QAAA,UAAU,eAAE;AAAK,UAAA,KAAK,EAAE;AAAEA,YAAAA,MAAM,EAAG;AAAX;AAAZ;AAAA;AAAA;AAAA;AAAA;AAHZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AASD;;AAxCsB;;AA2C7B,eAAexB,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from \"axios\";\nimport { GoogleMap, withScriptjs, withGoogleMap, Marker} from 'react-google-maps';\n\n\nclass Test extends Component {\n    \n    constructor(props){\n        super(props);\n        this.state = {\n            planes:[]\n        }\n        this.loadData = this.loadData.bind(this);\n    }\n    \n    async loadData() {\n        try {\n            axios.get(\"http://localhost:8081/over\").then(response => {\n                this.setState({ planes: response.data })\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    }\n    \n    render() {\n        \n        const WrappeMap = withScriptjs(withGoogleMap((props) =>\n            <GoogleMap defaultZoom={5} defaultCenter={{ lat: 40.483011, lng: -4.087557}}>\n                {this.state.planes.map((plane) => (\n                    <Marker key={plane.icao} position={{ lat: plane.latitude, lng: plane.longitude}}/>\n                    )\n                )}\n            </GoogleMap>\n          ))\n        \n        return (\n            <div >\n                <WrappeMap googleMapURL={`https://maps.googleapis.com/maps/api/js?key=AIzaSyCYtWGt6BW7bHK-u7emPPVsYWsoMUKODHI&v=3.exp&libraries=geometry,drawing,places`}\n                loadingElement={<div style={{ height: `100%` }} />}\n                containerElement={<div style={{ height: `400px` }} />}\n                mapElement={<div style={{ height: `100%` }} />}\n                />\n            </div>\n        );\n      }\n}\n\nexport default Test\n"]},"metadata":{},"sourceType":"module"}