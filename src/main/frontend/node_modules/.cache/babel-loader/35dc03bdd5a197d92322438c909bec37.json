{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\FlightTrack\\\\src\\\\main\\\\frontend\\\\src\\\\components\\\\MapComponent.js\";\nimport React, { Component, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ButtonToolbar } from 'react-bootstrap';\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Switch, Route, Link, useRouteMatch } from \"react-router-dom\";\nimport styled from 'styled-components';\nimport Alert from 'react-bootstrap/Alert'; //import { GoogleMap, withScriptjs, withGoogleMap, Marker} from 'react-google-maps';\n\nimport ReactMapGL, { Marker } from 'react-map-gl';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport { store } from 'react-notifications-component';\nimport ReactNotifications from \"react-notifications-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst H0 = styled.h1({\n  fontSize: 25,\n  paddingBottom: 30,\n  paddingTop: 20,\n  color: 'black',\n  textAlign: \"center\"\n});\nconst H1 = styled.h1({\n  paddingBottom: 30,\n  fontSize: 12,\n  paddingTop: 0,\n  textAlign: \"center\"\n});\n\nclass MapComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.createNotification = type => {\n      return () => {\n        switch (type) {\n          case 'info':\n            NotificationManager.info('', this.state.message, 2000);\n            break;\n        }\n      };\n    };\n\n    this.state = {\n      planes: [],\n      message: \"\",\n      aviao: \"\"\n    };\n    this.loadData = this.loadData.bind(this);\n    this.loadMessages = this.loadMessages.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadData();\n    this.loadMessages();\n    setInterval(this.loadData, 1000);\n    setInterval(this.loadMessages, 1000);\n  }\n\n  async loadMessages() {\n    try {\n      axios.get(\"http://localhost:8080/msg2\").then(response => {\n        this.setState({\n          message: response.data\n        });\n      });\n    } catch (e) {\n      console.log(e);\n    }\n\n    if (this.state.aviao != this.state.message && this.state.message != \"\" && this.state.aviao != \"\") {\n      NotificationManager.info('', this.state.message, 2000);\n      this.state.aviao = this.state.message;\n    }\n  }\n\n  async loadData() {\n    try {\n      axios.get(\"http://localhost:8080/map\").then(response => {\n        this.setState({\n          planes: response.data\n        });\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-info\",\n        onClick: this.createNotification('info'),\n        children: \"Show message \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NotificationContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactMapGL, {\n        latitude: 39.983011,\n        longitude: -4.087557,\n        width: \"72.3vw\",\n        height: \"67vh\",\n        zoom: 4.9,\n        mapboxApiAccessToken: \"pk.eyJ1Ijoicml0YS1hbWFudGU5OTU1IiwiYSI6ImNrbmEyZGpzYzBqcjcybm55Z2NyOTVkazMifQ.oRw17OIsKSA0CeIUG2UC1Q\",\n        children: this.state.planes.map(plane => /*#__PURE__*/_jsxDEV(Marker, {\n          latitude: plane.latitude,\n          longitude: plane.longitude,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"travelling.png\",\n            width: \"15\",\n            height: \"15\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this)\n        }, plane.icao, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MapComponent;","map":{"version":3,"sources":["C:/Users/User/Desktop/FlightTrack/src/main/frontend/src/components/MapComponent.js"],"names":["React","Component","useState","ReactDOM","ButtonToolbar","axios","BrowserRouter","Router","Switch","Route","Link","useRouteMatch","styled","Alert","ReactMapGL","Marker","NotificationContainer","NotificationManager","store","ReactNotifications","H0","h1","fontSize","paddingBottom","paddingTop","color","textAlign","H1","MapComponent","constructor","props","createNotification","type","info","state","message","planes","aviao","loadData","bind","loadMessages","componentDidMount","setInterval","get","then","response","setState","data","e","console","log","render","map","plane","latitude","longitude","icao"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {ButtonToolbar} from 'react-bootstrap';\r\nimport axios from \"axios\";\r\nimport { BrowserRouter as Router, Switch, Route, Link, useRouteMatch } from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\nimport Alert from 'react-bootstrap/Alert';\r\n//import { GoogleMap, withScriptjs, withGoogleMap, Marker} from 'react-google-maps';\r\nimport ReactMapGL, {Marker} from 'react-map-gl';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport { store } from 'react-notifications-component';\r\nimport ReactNotifications from \"react-notifications-component\";\r\n\r\nconst H0 = styled.h1({\r\n    fontSize: 25,\r\n    paddingBottom: 30,\r\n    paddingTop: 20,\r\n    color: 'black',\r\n    textAlign: \"center\"\r\n});\r\n\r\nconst H1 = styled.h1({\r\n    paddingBottom: 30,\r\n    fontSize: 12,\r\n    paddingTop: 0,\r\n    textAlign: \"center\"\r\n});\r\n\r\nclass MapComponent extends React.Component {\r\n\r\n    constructor(props){\r\n      super(props);\r\n        this.state = {\r\n          planes:[],\r\n          message:\"\",\r\n          aviao:\"\"\r\n        }\r\n      this.loadData = this.loadData.bind(this);\r\n      this.loadMessages = this.loadMessages.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n      this.loadData();\r\n      this.loadMessages();\r\n      setInterval(this.loadData, 1000);\r\n      setInterval(this.loadMessages, 1000);\r\n\r\n    }\r\n\r\n    async loadMessages() {\r\n        try {\r\n            axios.get(\"http://localhost:8080/msg2\").then(response => {\r\n                this.setState({ message: response.data })\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n        if (this.state.aviao != this.state.message && this.state.message != \"\" && this.state.aviao != \"\"){\r\n            NotificationManager.info('',this.state.message ,2000);\r\n            this.state.aviao = this.state.message;\r\n        }\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            axios.get(\"http://localhost:8080/map\").then(response => {\r\n                this.setState({ planes: response.data })\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    createNotification = (type) => {\r\n        return () => {\r\n            switch (type) {\r\n                case 'info':\r\n                    NotificationManager.info('',this.state.message ,2000);\r\n                    break;\r\n            }\r\n        };\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <div >\r\n                <button className='btn btn-info' onClick={this.createNotification('info')}>Show message </button>\r\n                <NotificationContainer/>\r\n\r\n                <ReactMapGL latitude={39.983011} longitude={-4.087557} width=\"72.3vw\" height=\"67vh\" zoom={4.9} mapboxApiAccessToken=\"pk.eyJ1Ijoicml0YS1hbWFudGU5OTU1IiwiYSI6ImNrbmEyZGpzYzBqcjcybm55Z2NyOTVkazMifQ.oRw17OIsKSA0CeIUG2UC1Q\">\r\n                    {this.state.planes.map( plane => (\r\n                        <Marker key={plane.icao} latitude={plane.latitude} longitude={plane.longitude}>\r\n                            <img src=\"travelling.png\" width=\"15\" height=\"15\"/>\r\n                        </Marker>\r\n                        )\r\n                    )}\r\n                </ReactMapGL>\r\n                                \r\n            </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default MapComponent"]},"metadata":{},"sourceType":"module"}